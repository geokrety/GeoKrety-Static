server {
    listen 80 default_server;
    server_name _;

    location / {
        root /usr/share/nginx/html;
        autoindex on;
    }

    # Custom error pages
    error_page 400 /errors/400-error.html;
    error_page 401 /errors/401-error.html;
    error_page 403 /errors/403-error.html;
    error_page 404 /errors/404-error.html;
    error_page 414 /errors/414-error.html;
    error_page 429 /errors/429-error.html;
    error_page 500 /errors/500-error.html;
    error_page 503 /errors/503-error.html;
    error_page 504 /errors/504-error.html;
    # Internal error pages
    location ^~ /errors/.*-error.html {
        try_files $uri =404;
        internal;
    }

    # # Prevent direct access to the /errors/ directory
    # location ^~ /errors/ {
    #     deny all;
    #     return 403;  # Forbidden if someone tries to access the /errors/ directory
    # }

    # Legacy bridge for statpics redirect
    location ~* ^/images/statpics/(?<user_id>.*)\.png$ {
        return 301 https://minio.geokrety.org/statpic/$user_id.png;
    }

    # Serve SVG as PNG using rsvg-convert
    location ~* \.svg\.png$ {
        root /usr/share/nginx/html;
        add_header Access-Control-Allow-Origin *;
        proxy_hide_header 'Cache-Control';
        add_header 'Cache-Control' "public, max-age=604800";

        perl 'sub {
            my $r = shift;
            my $fn = $r->filename;
            $fn =~ s{\.[^.]+$}{};

            if (!-e $fn) {
                $r->status(404);
                return DECLINED;
            }
            $r->send_http_header("image/png");
            $r->print(`/usr/bin/rsvg-convert $fn`);
            return OK;
        }';
    }

    # Serve static assets (fonts, images, CSS, JS) with caching
    location ~* \.(eot|ttf|woff|woff2|js|css|jpg|jpeg|png|svg|gif|json)$ {
        root /usr/share/nginx/html;
        add_header Access-Control-Allow-Origin *;
        proxy_hide_header 'Cache-Control';
        add_header 'Cache-Control' "public, max-age=604800";
    }
}
